
bfin-elf.x:     file format elf32-bfin


Disassembly of section .text:

00001400 <_start>:
    1400:	4e e1 00 00 	SP.H = 0x0;		/* (  0)	SP=0x0 */
    1404:	0e e1 10 1c 	SP.L = 0x1c10;		/* (7184)	SP=0x1c10 <_end> */
    1408:	00 e3 78 00 	CALL 0x14f8 <_main>;

0000140c <___exit>:
    140c:	08 68       	P0 = 0x1 (X);		/*		P0=0x1(  1) */
    140e:	a0 00       	EXCPT 0x0;
    1410:	10 00       	RTS;

00001412 <___read>:
    1412:	18 68       	P0 = 0x3 (X);		/*		P0=0x3(  3) */
    1414:	a0 00       	EXCPT 0x0;
    1416:	10 00       	RTS;

00001418 <___write>:
    1418:	20 68       	P0 = 0x4 (X);		/*		P0=0x4(  4) */
    141a:	a0 00       	EXCPT 0x0;
    141c:	10 00       	RTS;

0000141e <___open>:
    141e:	28 68       	P0 = 0x5 (X);		/*		P0=0x5(  5) */
    1420:	a0 00       	EXCPT 0x0;
    1422:	10 00       	RTS;

00001424 <___close>:
    1424:	30 68       	P0 = 0x6 (X);		/*		P0=0x6(  6) */
    1426:	a0 00       	EXCPT 0x0;
    1428:	10 00       	RTS;
	...

0000142c <_exit>:
    142c:	67 01       	[--SP] = RETS;
    142e:	a6 6f       	SP += -0xc;		/* (-12) */
    1430:	ff e3 ee ff 	CALL 0x140c <___exit>;

00001434 <_write1>:
    1434:	67 01       	[--SP] = RETS;
    1436:	a6 6f       	SP += -0xc;		/* (-12) */
    1438:	b1 e6 14 00 	B[SP + 0x14] = R1;
    143c:	4e 30       	R1 = SP;
    143e:	a1 64       	R1 += 0x14;		/* ( 20) */
    1440:	0a 60       	R2 = 0x1 (X);		/*		R2=0x1(  1) */
    1442:	ff e3 eb ff 	CALL 0x1418 <___write>;
    1446:	66 6c       	SP += 0xc;		/* ( 12) */
    1448:	27 01       	RETS = [SP++];
    144a:	10 00       	RTS;

0000144c <_putchar>:
    144c:	78 05       	[--SP] = (R7:7);
    144e:	67 01       	[--SP] = RETS;
    1450:	a6 6f       	SP += -0xc;		/* (-12) */
    1452:	39 30       	R7 = R1;
    1454:	ff e3 f0 ff 	CALL 0x1434 <_write1>;
    1458:	07 30       	R0 = R7;
    145a:	66 6c       	SP += 0xc;		/* ( 12) */
    145c:	27 01       	RETS = [SP++];
    145e:	38 05       	(R7:7) = [SP++];
    1460:	10 00       	RTS;
	...

00001464 <_puts>:
    1464:	fd 05       	[--SP] = (R7:7, P5:5);
    1466:	67 01       	[--SP] = RETS;
    1468:	a6 6f       	SP += -0xc;		/* (-12) */
    146a:	38 30       	R7 = R0;
    146c:	11 32       	P2 = R1;
    146e:	52 99       	R2 = B[P2] (X);
    1470:	10 43       	R0 = R2.B (X);
    1472:	00 0c       	CC = R0 == 0x0;
    1474:	0b 18       	IF CC JUMP 0x148a <_puts+0x26>;
    1476:	29 32       	P5 = R1;
    1478:	0d 6c       	P5 += 0x1;		/* (  1) */
    147a:	11 43       	R1 = R2.B (X);
    147c:	07 30       	R0 = R7;
    147e:	ff e3 e7 ff 	CALL 0x144c <_putchar>;
    1482:	6a 98       	R2 = B[P5++] (X);
    1484:	11 43       	R1 = R2.B (X);
    1486:	01 0c       	CC = R1 == 0x0;
    1488:	f9 17       	IF !CC JUMP 0x147a <_puts+0x16> (BP);
    148a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    148c:	66 6c       	SP += 0xc;		/* ( 12) */
    148e:	27 01       	RETS = [SP++];
    1490:	bd 05       	(R7:7, P5:5) = [SP++];
    1492:	10 00       	RTS;

00001494 <_putxval>:
    1494:	f5 05       	[--SP] = (R7:6, P5:5);
    1496:	67 01       	[--SP] = RETS;
    1498:	06 6f       	SP += -0x20;		/* (-32) */
    149a:	03 60       	R3 = 0x0 (X);		/*		R3=0x0(  0) */
    149c:	b3 e6 1c 00 	B[SP + 0x1c] = R3;
    14a0:	01 0c       	CC = R1 == 0x0;
    14a2:	04 14       	IF !CC JUMP 0x14aa <_putxval+0x16> (BP);
    14a4:	02 0c       	CC = R2 == 0x0;
    14a6:	0b 60       	R3 = 0x1 (X);		/*		R3=0x1(  1) */
    14a8:	13 07       	IF CC R2 = R3;
    14aa:	56 32       	P2 = SP;
    14ac:	d2 6c       	P2 += 0x1a;		/* ( 26) */
    14ae:	86 61       	R6 = 0x30 (X);		/*		R6=0x30( 48) */
    14b0:	48 e1 00 00 	P0.H = 0x0;		/* (  0)	P0=0x6 */
    14b4:	08 e1 30 15 	P0.L = 0x1530;		/* (5424)	P0=0x1530 <_etext> */
    14b8:	7f 60       	R7 = 0xf (X);		/*		R7=0xf( 15) */
    14ba:	0c 20       	JUMP.S 0x14d2 <_putxval+0x3e>;
    14bc:	f9 54       	R3 = R1 & R7;
    14be:	2b 32       	P5 = R3;
    14c0:	68 5a       	P1 = P0 + P5;
    14c2:	4b 99       	R3 = B[P1] (X);
    14c4:	93 e6 01 00 	B[P2 + 0x1] = R3;
    14c8:	21 4e       	R1 >>= 0x4;
    14ca:	02 0c       	CC = R2 == 0x0;
    14cc:	02 1c       	IF CC JUMP 0x14d0 <_putxval+0x3c> (BP);
    14ce:	fa 67       	R2 += -0x1;		/* ( -1) */
    14d0:	fa 6f       	P2 += -0x1;		/* ( -1) */
    14d2:	5a 30       	R3 = P2;
    14d4:	0b 64       	R3 += 0x1;		/* (  1) */
    14d6:	01 0c       	CC = R1 == 0x0;
    14d8:	f2 17       	IF !CC JUMP 0x14bc <_putxval+0x28> (BP);
    14da:	02 0c       	CC = R2 == 0x0;
    14dc:	04 18       	IF CC JUMP 0x14e4 <_putxval+0x50>;
    14de:	96 e6 01 00 	B[P2 + 0x1] = R6;
    14e2:	f6 2f       	JUMP.S 0x14ce <_putxval+0x3a>;
    14e4:	0b 30       	R1 = R3;
    14e6:	09 64       	R1 += 0x1;		/* (  1) */
    14e8:	ff e3 be ff 	CALL 0x1464 <_puts>;
    14ec:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    14ee:	06 6d       	SP += 0x20;		/* ( 32) */
    14f0:	27 01       	RETS = [SP++];
    14f2:	b5 05       	(R7:6, P5:5) = [SP++];
    14f4:	10 00       	RTS;
	...

000014f8 <_main>:
    14f8:	67 01       	[--SP] = RETS;
    14fa:	a6 6f       	SP += -0xc;		/* (-12) */
    14fc:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    14fe:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x0(  0) */
    1502:	01 e1 44 15 	R1.L = 0x1544;		/* (5444)	R1=0x1544(5444) */
    1506:	ff e3 af ff 	CALL 0x1464 <_puts>;
    150a:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    150c:	4a e1 00 00 	P2.H = 0x0;		/* (  0)	P2=0x0 */
    1510:	0a e1 00 18 	P2.L = 0x1800;		/* (6144)	P2=0x1800 <_data_value> */
    1514:	11 91       	R1 = [P2];
    1516:	02 60       	R2 = 0x0 (X);		/*		R2=0x0(  0) */
    1518:	ff e3 be ff 	CALL 0x1494 <_putxval>;
    151c:	08 60       	R0 = 0x1 (X);		/*		R0=0x1(  1) */
    151e:	41 e1 00 00 	R1.H = 0x0;		/* (  0)	R1=0x1544(5444) */
    1522:	01 e1 54 15 	R1.L = 0x1554;		/* (5460)	R1=0x1554(5460) */
    1526:	ff e3 9f ff 	CALL 0x1464 <_puts>;
    152a:	00 60       	R0 = 0x0 (X);		/*		R0=0x0(  0) */
    152c:	ff e3 80 ff 	CALL 0x142c <_exit>;
