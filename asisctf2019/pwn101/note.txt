struct address_t {
    int phonenumber;
    char *name; // malloc(0x20);
    char *desc; // malloc(size); (one byte overflow)
};
struct address_t addresses[10] @ 0x555555756048


-- add --
addresses[i].name = malloc(0x20);
addresses[i].desc = malloc(length);


-- del --
free(addr->name);
free(addr->desc);


heap of addresses begin here
0x555555758268



-- vuln --
1. One byte overflow when reading in description.
2. Add ten new addresses.
3. Delete address 7.
4. Add new address (which will be index 7) and overflow PREV_INUSE. Also write fake size and fake prev_size.
6. Delete addresses 0 - 6.
7. Delete address 8.
8. Chunk 8 will be joined with chunk 7 and linked to unsorted bins with fd and bk.
9. Leak addr_main_arena, and calc libc.
10. Double free tcache.
11. Overwrite malloc_hook (free_hook) with one-gadet.
