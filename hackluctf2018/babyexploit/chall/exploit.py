import socket, struct, telnetlib


def sock(remoteip, remoteport):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((remoteip, remoteport))
    return s, s.makefile('rw', bufsize=0)


def read_until(f, delim='\n'):
    data = ''
    while not data.endswith(delim):
      data += f.read(1)
    return data


def shell(s):
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()


def p(a): return struct.pack("<I",a)
def u(a): return struct.unpack("<I",a)[0]
def p64(a): return struct.pack("<Q",a)
def u64(a): return struct.unpack("<Q",a)[0]


hoge = '\x0a\x0d\x06\x1c\x22\x38\x18\x26\x36\x0f\x39\x2b\x1c\x59\x42\x2c\x36\x1a\x2c\x26\x1c\x17\x2d\x39\x57\x43\x01\x07\x2b\x38\x09\x07\x1a\x01\x17\x13\x13\x17\x2d\x39\x0a\x0d\x06\x46\x5c\x7d'


print len(hoge)
dec = hoge[len(hoge)-1]
for i in xrange(len(hoge)-2, -1, -1):
    dec = chr((ord(dec[0]) ^ ord(hoge[i]))) + dec
print dec


'flag{Yay_if_th1s_is_yer_f1rst_gnisrever_flag!}'
