;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2019-09-02 18:05:01
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x818 -- 0x82f
0x818:      48 83 ec 08                  	sub rsp, 8
0x81c:      48 8b 05 c5 17 20 00         	mov rax, qword ptr [rip + 0x2017c5]
0x823:      48 85 c0                     	test rax, rax
0x826:      74 02                        	je 0x82a <_init+0x12>
0x828:      ff d0                        	call rax <__gmon_start__>
0x82a:      48 83 c4 08                  	add rsp, 8
0x82e:      c3                           	ret 
; section: .plt
; data inside code section at 0x830 -- 0x840
0x830:      ff 35 32 17 20 00 ff 25  34 17 20 00 0f 1f 40 00   |.52. ..%4. ...@.|
; function: function_840 at 0x840 -- 0x846
0x840:      ff 25 32 17 20 00            	jmp qword ptr [rip + 0x201732] <free>
; data inside code section at 0x846 -- 0x850
0x846:      68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_850 at 0x850 -- 0x856
0x850:      ff 25 2a 17 20 00            	jmp qword ptr [rip + 0x20172a] <_exit>
; data inside code section at 0x856 -- 0x860
0x856:      68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_860 at 0x860 -- 0x866
0x860:      ff 25 22 17 20 00            	jmp qword ptr [rip + 0x201722] <puts>
; data inside code section at 0x866 -- 0x870
0x866:      68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_870 at 0x870 -- 0x876
0x870:      ff 25 1a 17 20 00            	jmp qword ptr [rip + 0x20171a] <__stack_chk_fail>
; data inside code section at 0x876 -- 0x880
0x876:      68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_880 at 0x880 -- 0x886
0x880:      ff 25 12 17 20 00            	jmp qword ptr [rip + 0x201712] <setbuf>
; data inside code section at 0x886 -- 0x890
0x886:      68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_890 at 0x890 -- 0x896
0x890:      ff 25 0a 17 20 00            	jmp qword ptr [rip + 0x20170a] <printf>
; data inside code section at 0x896 -- 0x8a0
0x896:      68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_8a0 at 0x8a0 -- 0x8a6
0x8a0:      ff 25 02 17 20 00            	jmp qword ptr [rip + 0x201702] <read>
; data inside code section at 0x8a6 -- 0x8b0
0x8a6:      68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_8b0 at 0x8b0 -- 0x8b6
0x8b0:      ff 25 fa 16 20 00            	jmp qword ptr [rip + 0x2016fa] <calloc>
; data inside code section at 0x8b6 -- 0x8c0
0x8b6:      68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_8c0 at 0x8c0 -- 0x8c6
0x8c0:      ff 25 f2 16 20 00            	jmp qword ptr [rip + 0x2016f2] <getchar>
; data inside code section at 0x8c6 -- 0x8d0
0x8c6:      68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_8d0 at 0x8d0 -- 0x8d6
0x8d0:      ff 25 ea 16 20 00            	jmp qword ptr [rip + 0x2016ea] <malloc>
; data inside code section at 0x8d6 -- 0x8e0
0x8d6:      68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_8e0 at 0x8e0 -- 0x8e6
0x8e0:      ff 25 e2 16 20 00            	jmp qword ptr [rip + 0x2016e2] <realloc>
; data inside code section at 0x8e6 -- 0x8f0
0x8e6:      68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_8f0 at 0x8f0 -- 0x8f6
0x8f0:      ff 25 da 16 20 00            	jmp qword ptr [rip + 0x2016da] <scanf>
; data inside code section at 0x8f6 -- 0x900
0x8f6:      68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; section: .plt.got
; function: function_900 at 0x900 -- 0x906
0x900:      ff 25 f2 16 20 00            	jmp qword ptr [rip + 0x2016f2] <__cxa_finalize>
; data inside code section at 0x906 -- 0x908
0x906:      66 90                                              |f.              |
; section: .text
; function: _start at 0x910 -- 0x93b
0x910:      31 ed                        	xor ebp, ebp
0x912:      49 89 d1                     	mov r9, rdx
0x915:      5e                           	pop rsi
0x916:      48 89 e2                     	mov rdx, rsp
0x919:      48 83 e4 f0                  	and rsp, 0xfffffffffffffff0
0x91d:      50                           	push rax
0x91e:      54                           	push rsp
0x91f:      4c 8d 05 5a 05 00 00         	lea r8, [rip + 0x55a]
0x926:      48 8d 0d e3 04 00 00         	lea rcx, [rip + 0x4e3]
0x92d:      48 8d 3d 22 04 00 00         	lea rdi, [rip + 0x422]
0x934:      ff 15 a6 16 20 00            	call qword ptr [rip + 0x2016a6] <__libc_start_main>
0x93a:      f4                           	hlt 
; data inside code section at 0x93b -- 0x940
0x93b:      0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x940 -- 0x972
0x940:      48 8d 3d c9 16 20 00         	lea rdi, [rip + 0x2016c9]
0x947:      55                           	push rbp
0x948:      48 8d 05 c1 16 20 00         	lea rax, [rip + 0x2016c1]
0x94f:      48 39 f8                     	cmp rax, rdi
0x952:      48 89 e5                     	mov rbp, rsp
0x955:      74 19                        	je 0x970 <deregister_tm_clones+0x30>
0x957:      48 8b 05 7a 16 20 00         	mov rax, qword ptr [rip + 0x20167a]
0x95e:      48 85 c0                     	test rax, rax
0x961:      74 0d                        	je 0x970 <deregister_tm_clones+0x30>
0x963:      5d                           	pop rbp
0x964:      ff e0                        	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x966 -- 0x970
0x966:      66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x970:      5d                           	pop rbp
0x971:      c3                           	ret 
; data inside code section at 0x972 -- 0x980
0x972:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x980 -- 0x9c2
0x980:      48 8d 3d 89 16 20 00         	lea rdi, [rip + 0x201689]
0x987:      48 8d 35 82 16 20 00         	lea rsi, [rip + 0x201682]
0x98e:      55                           	push rbp
0x98f:      48 29 fe                     	sub rsi, rdi
0x992:      48 89 e5                     	mov rbp, rsp
0x995:      48 c1 fe 03                  	sar rsi, 3
0x999:      48 89 f0                     	mov rax, rsi
0x99c:      48 c1 e8 3f                  	shr rax, 0x3f
0x9a0:      48 01 c6                     	add rsi, rax
0x9a3:      48 d1 fe                     	sar rsi, 1
0x9a6:      74 18                        	je 0x9c0 <register_tm_clones+0x40>
0x9a8:      48 8b 05 41 16 20 00         	mov rax, qword ptr [rip + 0x201641]
0x9af:      48 85 c0                     	test rax, rax
0x9b2:      74 0c                        	je 0x9c0 <register_tm_clones+0x40>
0x9b4:      5d                           	pop rbp
0x9b5:      ff e0                        	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x9b7 -- 0x9c0
0x9b7:      66 0f 1f 84 00 00 00 00  00                        |f........       |
0x9c0:      5d                           	pop rbp
0x9c1:      c3                           	ret 
; data inside code section at 0x9c2 -- 0x9d0
0x9c2:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x9d0 -- 0xa0a
0x9d0:      80 3d 51 16 20 00 00         	cmp byte ptr [rip + 0x201651], 0
0x9d7:      75 2f                        	jne 0xa08 <__do_global_dtors_aux+0x38>
0x9d9:      48 83 3d 17 16 20 00 00      	cmp qword ptr [rip + 0x201617], 0
0x9e1:      55                           	push rbp
0x9e2:      48 89 e5                     	mov rbp, rsp
0x9e5:      74 0c                        	je 0x9f3 <__do_global_dtors_aux+0x23>
0x9e7:      48 8b 3d 1a 16 20 00         	mov rdi, qword ptr [rip + 0x20161a]
0x9ee:      e8 0d ff ff ff               	call 0x900 <__cxa_finalize>
0x9f3:      e8 48 ff ff ff               	call 0x940 <deregister_tm_clones>
0x9f8:      c6 05 29 16 20 00 01         	mov byte ptr [rip + 0x201629], 1
0x9ff:      5d                           	pop rbp
0xa00:      c3                           	ret 
; data inside code section at 0xa01 -- 0xa08
0xa01:      0f 1f 80 00 00 00 00                               |.......         |
0xa08:      f3 c3                        	ret 
; data inside code section at 0xa0a -- 0xa10
0xa0a:      66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0xa10 -- 0xa1a
0xa10:      55                           	push rbp
0xa11:      48 89 e5                     	mov rbp, rsp
0xa14:      5d                           	pop rbp
0xa15:      e9 66 ff ff ff               	jmp 0x980 <register_tm_clones>
; function: initialize at 0xa1a -- 0xa49
0xa1a:      55                           	push rbp
0xa1b:      48 89 e5                     	mov rbp, rsp
0xa1e:      48 8b 05 fb 15 20 00         	mov rax, qword ptr [rip + 0x2015fb]
0xa25:      be 00 00 00 00               	mov esi, 0
0xa2a:      48 89 c7                     	mov rdi, rax
0xa2d:      e8 4e fe ff ff               	call 0x880 <setbuf>
0xa32:      48 8b 05 d7 15 20 00         	mov rax, qword ptr [rip + 0x2015d7]
0xa39:      be 00 00 00 00               	mov esi, 0
0xa3e:      48 89 c7                     	mov rdi, rax
0xa41:      e8 3a fe ff ff               	call 0x880 <setbuf>
0xa46:      90                           	nop 
0xa47:      5d                           	pop rbp
0xa48:      c3                           	ret 
; function: print_menu at 0xa49 -- 0xaa4
0xa49:      55                           	push rbp
0xa4a:      48 89 e5                     	mov rbp, rsp
0xa4d:      48 8d 3d 44 04 00 00         	lea rdi, [rip + 0x444]
0xa54:      e8 07 fe ff ff               	call 0x860 <puts>
0xa59:      48 8d 3d 5a 04 00 00         	lea rdi, [rip + 0x45a]
0xa60:      e8 fb fd ff ff               	call 0x860 <puts>
0xa65:      48 8d 3d 58 04 00 00         	lea rdi, [rip + 0x458]
0xa6c:      e8 ef fd ff ff               	call 0x860 <puts>
0xa71:      48 8d 3d 56 04 00 00         	lea rdi, [rip + 0x456]
0xa78:      e8 e3 fd ff ff               	call 0x860 <puts>
0xa7d:      48 8d 3d 55 04 00 00         	lea rdi, [rip + 0x455]
0xa84:      e8 d7 fd ff ff               	call 0x860 <puts>
0xa89:      48 8d 3d 51 04 00 00         	lea rdi, [rip + 0x451]
0xa90:      e8 cb fd ff ff               	call 0x860 <puts>
0xa95:      48 8d 3d fc 03 00 00         	lea rdi, [rip + 0x3fc]
0xa9c:      e8 bf fd ff ff               	call 0x860 <puts>
0xaa1:      90                           	nop 
0xaa2:      5d                           	pop rbp
0xaa3:      c3                           	ret 
; function: call_malloc at 0xaa4 -- 0xb4d
0xaa4:      55                           	push rbp
0xaa5:      48 89 e5                     	mov rbp, rsp
0xaa8:      48 83 ec 10                  	sub rsp, 0x10
0xaac:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xab5:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xab9:      31 c0                        	xor eax, eax
0xabb:      48 8b 05 76 15 20 00         	mov rax, qword ptr [rip + 0x201576]
0xac2:      48 85 c0                     	test rax, rax
0xac5:      75 6f                        	jne 0xb36 <call_malloc+0x92>
0xac7:      48 8d 3d 1b 04 00 00         	lea rdi, [rip + 0x41b]
0xace:      b8 00 00 00 00               	mov eax, 0
0xad3:      e8 b8 fd ff ff               	call 0x890 <printf>
0xad8:      48 8d 45 f0                  	lea rax, [rbp - 0x10]
0xadc:      48 89 c6                     	mov rsi, rax
0xadf:      48 8d 3d 0a 04 00 00         	lea rdi, [rip + 0x40a]
0xae6:      b8 00 00 00 00               	mov eax, 0
0xaeb:      e8 00 fe ff ff               	call 0x8f0 <scanf>
0xaf0:      e8 cb fd ff ff               	call 0x8c0 <getchar>
0xaf5:      48 8d 3d f8 03 00 00         	lea rdi, [rip + 0x3f8]
0xafc:      b8 00 00 00 00               	mov eax, 0
0xb01:      e8 8a fd ff ff               	call 0x890 <printf>
0xb06:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xb0a:      48 89 c7                     	mov rdi, rax
0xb0d:      e8 be fd ff ff               	call 0x8d0 <malloc>
0xb12:      48 89 05 1f 15 20 00         	mov qword ptr [rip + 0x20151f], rax
0xb19:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xb1d:      48 89 c2                     	mov rdx, rax
0xb20:      48 8b 05 11 15 20 00         	mov rax, qword ptr [rip + 0x201511]
0xb27:      48 89 c6                     	mov rsi, rax
0xb2a:      bf 00 00 00 00               	mov edi, 0
0xb2f:      e8 6c fd ff ff               	call 0x8a0 <read>
0xb34:      eb 01                        	jmp 0xb37 <call_malloc+0x93>
0xb36:      90                           	nop 
0xb37:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xb3b:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xb44:      74 05                        	je 0xb4b <call_malloc+0xa7>
0xb46:      e8 25 fd ff ff               	call 0x870 <__stack_chk_fail>
0xb4b:      c9                           	leave 
0xb4c:      c3                           	ret 
; function: call_calloc at 0xb4d -- 0xbfb
0xb4d:      55                           	push rbp
0xb4e:      48 89 e5                     	mov rbp, rsp
0xb51:      48 83 ec 10                  	sub rsp, 0x10
0xb55:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xb5e:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xb62:      31 c0                        	xor eax, eax
0xb64:      48 8b 05 d5 14 20 00         	mov rax, qword ptr [rip + 0x2014d5]
0xb6b:      48 85 c0                     	test rax, rax
0xb6e:      75 74                        	jne 0xbe4 <call_calloc+0x97>
0xb70:      48 8d 3d 72 03 00 00         	lea rdi, [rip + 0x372]
0xb77:      b8 00 00 00 00               	mov eax, 0
0xb7c:      e8 0f fd ff ff               	call 0x890 <printf>
0xb81:      48 8d 45 f0                  	lea rax, [rbp - 0x10]
0xb85:      48 89 c6                     	mov rsi, rax
0xb88:      48 8d 3d 61 03 00 00         	lea rdi, [rip + 0x361]
0xb8f:      b8 00 00 00 00               	mov eax, 0
0xb94:      e8 57 fd ff ff               	call 0x8f0 <scanf>
0xb99:      e8 22 fd ff ff               	call 0x8c0 <getchar>
0xb9e:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xba2:      48 89 c6                     	mov rsi, rax
0xba5:      bf 01 00 00 00               	mov edi, 1
0xbaa:      e8 01 fd ff ff               	call 0x8b0 <calloc>
0xbaf:      48 89 05 8a 14 20 00         	mov qword ptr [rip + 0x20148a], rax
0xbb6:      48 8d 3d 37 03 00 00         	lea rdi, [rip + 0x337]
0xbbd:      b8 00 00 00 00               	mov eax, 0
0xbc2:      e8 c9 fc ff ff               	call 0x890 <printf>
0xbc7:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xbcb:      48 89 c2                     	mov rdx, rax
0xbce:      48 8b 05 6b 14 20 00         	mov rax, qword ptr [rip + 0x20146b]
0xbd5:      48 89 c6                     	mov rsi, rax
0xbd8:      bf 00 00 00 00               	mov edi, 0
0xbdd:      e8 be fc ff ff               	call 0x8a0 <read>
0xbe2:      eb 01                        	jmp 0xbe5 <call_calloc+0x98>
0xbe4:      90                           	nop 
0xbe5:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xbe9:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xbf2:      74 05                        	je 0xbf9 <call_calloc+0xac>
0xbf4:      e8 77 fc ff ff               	call 0x870 <__stack_chk_fail>
0xbf9:      c9                           	leave 
0xbfa:      c3                           	ret 
; function: call_realloc at 0xbfb -- 0xca3
0xbfb:      55                           	push rbp
0xbfc:      48 89 e5                     	mov rbp, rsp
0xbff:      48 83 ec 10                  	sub rsp, 0x10
0xc03:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xc0c:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xc10:      31 c0                        	xor eax, eax
0xc12:      48 8d 3d d0 02 00 00         	lea rdi, [rip + 0x2d0]
0xc19:      b8 00 00 00 00               	mov eax, 0
0xc1e:      e8 6d fc ff ff               	call 0x890 <printf>
0xc23:      48 8d 45 f0                  	lea rax, [rbp - 0x10]
0xc27:      48 89 c6                     	mov rsi, rax
0xc2a:      48 8d 3d bf 02 00 00         	lea rdi, [rip + 0x2bf]
0xc31:      b8 00 00 00 00               	mov eax, 0
0xc36:      e8 b5 fc ff ff               	call 0x8f0 <scanf>
0xc3b:      e8 80 fc ff ff               	call 0x8c0 <getchar>
0xc40:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xc44:      48 89 c2                     	mov rdx, rax
0xc47:      48 8b 05 e2 13 20 00         	mov rax, qword ptr [rip + 0x2013e2]
0xc4e:      48 89 d6                     	mov rsi, rdx
0xc51:      48 89 c7                     	mov rdi, rax
0xc54:      e8 87 fc ff ff               	call 0x8e0 <realloc>
0xc59:      48 89 05 d0 13 20 00         	mov qword ptr [rip + 0x2013d0], rax
0xc60:      48 8d 3d 8d 02 00 00         	lea rdi, [rip + 0x28d]
0xc67:      b8 00 00 00 00               	mov eax, 0
0xc6c:      e8 1f fc ff ff               	call 0x890 <printf>
0xc71:      48 8b 45 f0                  	mov rax, qword ptr [rbp - 0x10]
0xc75:      48 89 c2                     	mov rdx, rax
0xc78:      48 8b 05 b1 13 20 00         	mov rax, qword ptr [rip + 0x2013b1]
0xc7f:      48 89 c6                     	mov rsi, rax
0xc82:      bf 00 00 00 00               	mov edi, 0
0xc87:      e8 14 fc ff ff               	call 0x8a0 <read>
0xc8c:      90                           	nop 
0xc8d:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xc91:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xc9a:      74 05                        	je 0xca1 <call_realloc+0xa6>
0xc9c:      e8 cf fb ff ff               	call 0x870 <__stack_chk_fail>
0xca1:      c9                           	leave 
0xca2:      c3                           	ret 
; function: call_free at 0xca3 -- 0xd56
0xca3:      55                           	push rbp
0xca4:      48 89 e5                     	mov rbp, rsp
0xca7:      48 83 ec 10                  	sub rsp, 0x10
0xcab:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xcb4:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xcb8:      31 c0                        	xor eax, eax
0xcba:      48 8d 3d 3a 02 00 00         	lea rdi, [rip + 0x23a]
0xcc1:      b8 00 00 00 00               	mov eax, 0
0xcc6:      e8 c5 fb ff ff               	call 0x890 <printf>
0xccb:      48 8d 45 f7                  	lea rax, [rbp - 9]
0xccf:      48 89 c6                     	mov rsi, rax
0xcd2:      48 8d 3d 2a 02 00 00         	lea rdi, [rip + 0x22a]
0xcd9:      b8 00 00 00 00               	mov eax, 0
0xcde:      e8 0d fc ff ff               	call 0x8f0 <scanf>
0xce3:      e8 d8 fb ff ff               	call 0x8c0 <getchar>
0xce8:      0f b6 45 f7                  	movzx eax, byte ptr [rbp - 9]
0xcec:      3c 6d                        	cmp al, 0x6d
0xcee:      75 11                        	jne 0xd01 <call_free+0x5e>
0xcf0:      48 8b 05 41 13 20 00         	mov rax, qword ptr [rip + 0x201341]
0xcf7:      48 89 c7                     	mov rdi, rax
0xcfa:      e8 41 fb ff ff               	call 0x840 <free>
0xcff:      eb 3e                        	jmp 0xd3f <call_free+0x9c>
0xd01:      0f b6 45 f7                  	movzx eax, byte ptr [rbp - 9]
0xd05:      3c 63                        	cmp al, 0x63
0xd07:      75 11                        	jne 0xd1a <call_free+0x77>
0xd09:      48 8b 05 30 13 20 00         	mov rax, qword ptr [rip + 0x201330]
0xd10:      48 89 c7                     	mov rdi, rax
0xd13:      e8 28 fb ff ff               	call 0x840 <free>
0xd18:      eb 25                        	jmp 0xd3f <call_free+0x9c>
0xd1a:      0f b6 45 f7                  	movzx eax, byte ptr [rbp - 9]
0xd1e:      3c 72                        	cmp al, 0x72
0xd20:      75 11                        	jne 0xd33 <call_free+0x90>
0xd22:      48 8b 05 07 13 20 00         	mov rax, qword ptr [rip + 0x201307]
0xd29:      48 89 c7                     	mov rdi, rax
0xd2c:      e8 0f fb ff ff               	call 0x840 <free>
0xd31:      eb 0c                        	jmp 0xd3f <call_free+0x9c>
0xd33:      48 8d 3d cc 01 00 00         	lea rdi, [rip + 0x1cc]
0xd3a:      e8 21 fb ff ff               	call 0x860 <puts>
0xd3f:      90                           	nop 
0xd40:      48 8b 45 f8                  	mov rax, qword ptr [rbp - 8]
0xd44:      64 48 33 04 25 28 00 00 00   	xor rax, qword ptr fs:[0x28]
0xd4d:      74 05                        	je 0xd54 <call_free+0xb1>
0xd4f:      e8 1c fb ff ff               	call 0x870 <__stack_chk_fail>
0xd54:      c9                           	leave 
0xd55:      c3                           	ret 
; function: main at 0xd56 -- 0xe07
0xd56:      55                           	push rbp
0xd57:      48 89 e5                     	mov rbp, rsp
0xd5a:      48 83 ec 10                  	sub rsp, 0x10
0xd5e:      64 48 8b 04 25 28 00 00 00   	mov rax, qword ptr fs:[0x28]
0xd67:      48 89 45 f8                  	mov qword ptr [rbp - 8], rax
0xd6b:      31 c0                        	xor eax, eax
0xd6d:      e8 a8 fc ff ff               	call 0xa1a <initialize>
0xd72:      e8 d2 fc ff ff               	call 0xa49 <print_menu>
0xd77:      48 8d 3d 97 01 00 00         	lea rdi, [rip + 0x197]
0xd7e:      b8 00 00 00 00               	mov eax, 0
0xd83:      e8 08 fb ff ff               	call 0x890 <printf>
0xd88:      48 8d 45 f4                  	lea rax, [rbp - 0xc]
0xd8c:      48 89 c6                     	mov rsi, rax
0xd8f:      48 8d 3d 8d 01 00 00         	lea rdi, [rip + 0x18d]
0xd96:      b8 00 00 00 00               	mov eax, 0
0xd9b:      e8 50 fb ff ff               	call 0x8f0 <scanf>
0xda0:      e8 1b fb ff ff               	call 0x8c0 <getchar>
0xda5:      8b 45 f4                     	mov eax, dword ptr [rbp - 0xc]
0xda8:      83 f8 05                     	cmp eax, 5
0xdab:      77 49                        	ja 0xdf6 <main+0xa0>
0xdad:      89 c0                        	mov eax, eax
0xdaf:      48 8d 14 85 00 00 00 00      	lea rdx, [rax*4]
0xdb7:      48 8d 05 6a 01 00 00         	lea rax, [rip + 0x16a]
0xdbe:      8b 04 02                     	mov eax, dword ptr [rdx + rax]
0xdc1:      48 63 d0                     	movsxd rdx, eax
0xdc4:      48 8d 05 5d 01 00 00         	lea rax, [rip + 0x15d]
0xdcb:      48 01 d0                     	add rax, rdx
0xdce:      ff e0                        	jmp rax
0xdd0:      e8 cf fc ff ff               	call 0xaa4 <call_malloc>
0xdd5:      eb 2b                        	jmp 0xe02 <main+0xac>
0xdd7:      e8 71 fd ff ff               	call 0xb4d <call_calloc>
0xddc:      eb 24                        	jmp 0xe02 <main+0xac>
0xdde:      e8 18 fe ff ff               	call 0xbfb <call_realloc>
0xde3:      eb 1d                        	jmp 0xe02 <main+0xac>
0xde5:      e8 b9 fe ff ff               	call 0xca3 <call_free>
0xdea:      eb 16                        	jmp 0xe02 <main+0xac>
0xdec:      bf 00 00 00 00               	mov edi, 0
0xdf1:      e8 5a fa ff ff               	call 0x850 <_exit>
0xdf6:      48 8d 3d 09 01 00 00         	lea rdi, [rip + 0x109]
0xdfd:      e8 5e fa ff ff               	call 0x860 <puts>
0xe02:      e9 6b ff ff ff               	jmp 0xd72 <main+0x1c>
; data inside code section at 0xe07 -- 0xe10
0xe07:      66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: __libc_csu_init at 0xe10 -- 0xe75
0xe10:      41 57                        	push r15
0xe12:      41 56                        	push r14
0xe14:      49 89 d7                     	mov r15, rdx
0xe17:      41 55                        	push r13
0xe19:      41 54                        	push r12
0xe1b:      4c 8d 25 3e 0f 20 00         	lea r12, [rip + 0x200f3e]
0xe22:      55                           	push rbp
0xe23:      48 8d 2d 3e 0f 20 00         	lea rbp, [rip + 0x200f3e]
0xe2a:      53                           	push rbx
0xe2b:      41 89 fd                     	mov r13d, edi
0xe2e:      49 89 f6                     	mov r14, rsi
0xe31:      4c 29 e5                     	sub rbp, r12
0xe34:      48 83 ec 08                  	sub rsp, 8
0xe38:      48 c1 fd 03                  	sar rbp, 3
0xe3c:      e8 d7 f9 ff ff               	call 0x818 <_init>
0xe41:      48 85 ed                     	test rbp, rbp
0xe44:      74 20                        	je 0xe66 <__libc_csu_init+0x56>
0xe46:      31 db                        	xor ebx, ebx
0xe48:      0f 1f 84 00 00 00 00 00      	nop dword ptr [rax + rax]
0xe50:      4c 89 fa                     	mov rdx, r15
0xe53:      4c 89 f6                     	mov rsi, r14
0xe56:      44 89 ef                     	mov edi, r13d
0xe59:      41 ff 14 dc                  	call qword ptr [r12 + rbx*8]
0xe5d:      48 83 c3 01                  	add rbx, 1
0xe61:      48 39 dd                     	cmp rbp, rbx
0xe64:      75 ea                        	jne 0xe50 <__libc_csu_init+0x40>
0xe66:      48 83 c4 08                  	add rsp, 8
0xe6a:      5b                           	pop rbx
0xe6b:      5d                           	pop rbp
0xe6c:      41 5c                        	pop r12
0xe6e:      41 5d                        	pop r13
0xe70:      41 5e                        	pop r14
0xe72:      41 5f                        	pop r15
0xe74:      c3                           	ret 
; data inside code section at 0xe75 -- 0xe80
0xe75:      90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0xe80 -- 0xe82
0xe80:      f3 c3                        	ret 
; section: .fini
; function: _fini at 0xe84 -- 0xe8d
0xe84:      48 83 ec 08                  	sub rsp, 8
0xe88:      48 83 c4 08                  	add rsp, 8
0xe8c:      c3                           	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      02 00 00 00 12 00 00 00  01 00 00 00 06 00 00 00   |................|
0x2a8:      00 00 20 00 80 01 10 00  12 00 00 00 13 00 00 00   |.. .............|
0x2b8:      29 1d 8c 1c 67 55 61 10  00                        |)...gUa..       |
; section: .dynsym
0x2c0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d0:      00 00 00 00 00 00 00 00  95 00 00 00 12 00 00 00   |................|
0x2e0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f0:      ba 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x300:      00 00 00 00 00 00 00 00  3e 00 00 00 12 00 00 00   |........>.......|
0x310:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x320:      1a 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x330:      00 00 00 00 00 00 00 00  1f 00 00 00 12 00 00 00   |................|
0x340:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x350:      7c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   ||...............|
0x360:      00 00 00 00 00 00 00 00  44 00 00 00 12 00 00 00   |........D.......|
0x370:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x380:      5a 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |Z...............|
0x390:      00 00 00 00 00 00 00 00  83 00 00 00 12 00 00 00   |................|
0x3a0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3b0:      4b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |K...............|
0x3c0:      00 00 00 00 00 00 00 00  52 00 00 00 12 00 00 00   |........R.......|
0x3d0:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e0:      d6 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x3f0:      00 00 00 00 00 00 00 00  66 00 00 00 12 00 00 00   |........f.......|
0x400:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x410:      30 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |0...............|
0x420:      00 00 00 00 00 00 00 00  0b 00 00 00 12 00 00 00   |................|
0x430:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x440:      e5 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x450:      00 00 00 00 00 00 00 00  6d 00 00 00 22 00 00 00   |........m..."...|
0x460:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x470:      5f 00 00 00 11 00 18 00  10 20 20 00 00 00 00 00   |_........  .....|
0x480:      08 00 00 00 00 00 00 00  38 00 00 00 11 00 18 00   |........8.......|
0x490:      20 20 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |   .............|
0x4a0:      00                                                 |.               |
; section: .dynstr
0x4a0:      00 6c 69 62 63 2e 73 6f  2e 36 00 5f 5f 69 73 6f   |.libc.so.6.__iso|
0x4b0:      63 39 39 5f 73 63 61 6e  66 00 70 75 74 73 00 5f   |c99_scanf.puts._|
0x4c0:      5f 73 74 61 63 6b 5f 63  68 6b 5f 66 61 69 6c 00   |_stack_chk_fail.|
0x4d0:      72 65 61 6c 6c 6f 63 00  73 74 64 69 6e 00 5f 65   |realloc.stdin._e|
0x4e0:      78 69 74 00 70 72 69 6e  74 66 00 63 61 6c 6c 6f   |xit.printf.callo|
0x4f0:      63 00 67 65 74 63 68 61  72 00 72 65 61 64 00 73   |c.getchar.read.s|
0x500:      74 64 6f 75 74 00 6d 61  6c 6c 6f 63 00 5f 5f 63   |tdout.malloc.__c|
0x510:      78 61 5f 66 69 6e 61 6c  69 7a 65 00 73 65 74 62   |xa_finalize.setb|
0x520:      75 66 00 5f 5f 6c 69 62  63 5f 73 74 61 72 74 5f   |uf.__libc_start_|
0x530:      6d 61 69 6e 00 66 72 65  65 00 47 4c 49 42 43 5f   |main.free.GLIBC_|
0x540:      32 2e 37 00 47 4c 49 42  43 5f 32 2e 34 00 47 4c   |2.7.GLIBC_2.4.GL|
0x550:      49 42 43 5f 32 2e 32 2e  35 00 5f 49 54 4d 5f 64   |IBC_2.2.5._ITM_d|
0x560:      65 72 65 67 69 73 74 65  72 54 4d 43 6c 6f 6e 65   |eregisterTMClone|
0x570:      54 61 62 6c 65 00 5f 5f  67 6d 6f 6e 5f 73 74 61   |Table.__gmon_sta|
0x580:      72 74 5f 5f 00 5f 49 54  4d 5f 72 65 67 69 73 74   |rt__._ITM_regist|
0x590:      65 72 54 4d 43 6c 6f 6e  65 54 61 62 6c 65 00 ??   |erTMCloneTable.?|
; section: .gnu.version
0x5a0:      00 00 02 00 00 00 02 00  02 00 03 00 02 00 02 00   |................|
0x5b0:      02 00 02 00 02 00 02 00  00 00 02 00 02 00 04 00   |................|
0x5c0:      00 00 02 00 02 00 02 00  01                        |.........       |
; section: .gnu.version_r
0x5c8:      01 00 03 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x5d8:      17 69 69 0d 00 00 04 00  9a 00 00 00 10 00 00 00   |.ii.............|
0x5e8:      14 69 69 0d 00 00 03 00  a4 00 00 00 10 00 00 00   |.ii.............|
0x5f8:      75 1a 69 09 00 00 02 00  ae 00 00 00 00 00 00 00   |u.i.............|
0x608:      60                                                 |`               |
; section: .rela.dyn
0x608:      60 1d 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |`. .............|
0x618:      10 0a 00 00 00 00 00 00  68 1d 20 00 00 00 00 00   |........h. .....|
0x628:      08 00 00 00 00 00 00 00  d0 09 00 00 00 00 00 00   |................|
0x638:      08 20 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.  .............|
0x648:      08 20 20 00 00 00 00 00  d8 1f 20 00 00 00 00 00   |.  ....... .....|
0x658:      06 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x668:      e0 1f 20 00 00 00 00 00  06 00 00 00 09 00 00 00   |.. .............|
0x678:      00 00 00 00 00 00 00 00  e8 1f 20 00 00 00 00 00   |.......... .....|
0x688:      06 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00   |................|
0x698:      f0 1f 20 00 00 00 00 00  06 00 00 00 10 00 00 00   |.. .............|
0x6a8:      00 00 00 00 00 00 00 00  f8 1f 20 00 00 00 00 00   |.......... .....|
0x6b8:      06 00 00 00 11 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6c8:      10 20 20 00 00 00 00 00  05 00 00 00 12 00 00 00   |.  .............|
0x6d8:      00 00 00 00 00 00 00 00  20 20 20 00 00 00 00 00   |........   .....|
0x6e8:      05 00 00 00 13 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6f8:      78                                                 |x               |
; section: .rela.plt
0x6f8:      78 1f 20 00 00 00 00 00  07 00 00 00 01 00 00 00   |x. .............|
0x708:      00 00 00 00 00 00 00 00  80 1f 20 00 00 00 00 00   |.......... .....|
0x718:      07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x728:      88 1f 20 00 00 00 00 00  07 00 00 00 04 00 00 00   |.. .............|
0x738:      00 00 00 00 00 00 00 00  90 1f 20 00 00 00 00 00   |.......... .....|
0x748:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x758:      98 1f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   |.. .............|
0x768:      00 00 00 00 00 00 00 00  a0 1f 20 00 00 00 00 00   |.......... .....|
0x778:      07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x788:      a8 1f 20 00 00 00 00 00  07 00 00 00 08 00 00 00   |.. .............|
0x798:      00 00 00 00 00 00 00 00  b0 1f 20 00 00 00 00 00   |.......... .....|
0x7a8:      07 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7b8:      b8 1f 20 00 00 00 00 00  07 00 00 00 0b 00 00 00   |.. .............|
0x7c8:      00 00 00 00 00 00 00 00  c0 1f 20 00 00 00 00 00   |.......... .....|
0x7d8:      07 00 00 00 0d 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7e8:      c8 1f 20 00 00 00 00 00  07 00 00 00 0e 00 00 00   |.. .............|
0x7f8:      00 00 00 00 00 00 00 00  d0 1f 20 00 00 00 00 00   |.......... .....|
0x808:      07 00 00 00 0f 00 00 00  00 00 00 00 00 00 00 00   |................|
0x818:      48                                                 |H               |
; section: .rodata
0xe90:      01 00 02 00 00 00 00 00                            |........        |
0xe98:      3d 3d 3d 3d 3d 3d 3d 3d  3d 3d 3d 3d 3d 3d 3d 3d   |================|   "================================="
0xea8:      3d 3d 3d 3d 3d 3d 3d 3d  3d 3d 3d 3d 3d 3d 3d 3d   |================|
0xeb8:      3d 00                                              |=.              |
0xeba:      31 2e 20 6d 61 6c 6c 6f  63 00                     |1. malloc.      |   "1. malloc"
0xec4:      32 2e 20 63 61 6c 6c 6f  63 00                     |2. calloc.      |   "2. calloc"
0xece:      33 2e 20 72 65 61 6c 6c  6f 63 00                  |3. realloc.     |   "3. realloc"
0xed9:      34 2e 20 66 72 65 65 00                            |4. free.        |   "4. free"
0xee1:      35 2e 20 65 78 69 74 00                            |5. exit.        |   "5. exit"
0xee9:      53 69 7a 65 3a 20 00                               |Size: .         |   "Size: "
0xef0:      25 6c 64 00                                        |%ld.            |   "%ld"
0xef4:      44 61 74 61 3a 20 00                               |Data: .         |   "Data: "
0xefb:      57 68 69 63 68 3a 20 00                            |Which: .        |   "Which: "
0xf03:      25 63 00                                           |%c.             |   "%c"
0xf06:      49 6e 76 61 6c 69 64 20  63 68 6f 69 63 65 00      |Invalid choice. |   "Invalid choice"
0xf15:      59 6f 75 72 20 63 68 6f  69 63 65 3a 20 00         |Your choice: .  |   "Your choice: "
0xf23:      25 64 00                                           |%d.             |   "%d"
0xf26:      00 00 ce fe ff ff a8 fe  ff ff af fe ff ff b6 fe   |................|
0xf36:      ff ff bd fe ff ff c4 fe  ff ff 01                  |...........     |
; section: .eh_frame_hdr
0xf40:      01 1b 03 3b 6c 00 00 00  0c 00 00 00 f0 f8 ff ff   |...;l...........|
0xf50:      b8 00 00 00 c0 f9 ff ff  e0 00 00 00 d0 f9 ff ff   |................|
0xf60:      88 00 00 00 da fa ff ff  f8 00 00 00 09 fb ff ff   |................|
0xf70:      18 01 00 00 64 fb ff ff  38 01 00 00 0d fc ff ff   |....d...8.......|
0xf80:      58 01 00 00 bb fc ff ff  78 01 00 00 63 fd ff ff   |X.......x...c...|
0xf90:      98 01 00 00 16 fe ff ff  b8 01 00 00 d0 fe ff ff   |................|
0xfa0:      d8 01 00 00 40 ff ff ff  20 02 00 00 ??            |....@... ...?   |
; section: .eh_frame
0xfb0:      14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0xfc0:      1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0xfd0:      40 f9 ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |@...+...........|
0xfe0:      14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0xff0:      1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x1000:     30 f8 ff ff d0 00 00 00  00 0e 10 46 0e 18 4a 0f   |0..........F..J.|
0x1010:     0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x1020:     14 00 00 00 44 00 00 00  d8 f8 ff ff 08 00 00 00   |....D...........|
0x1030:     00 00 00 00 00 00 00 00  1c 00 00 00 5c 00 00 00   |............\...|
0x1040:     da f9 ff ff 2f 00 00 00  00 41 0e 10 86 02 43 0d   |..../....A....C.|
0x1050:     06 6a 0c 07 08 00 00 00  1c 00 00 00 7c 00 00 00   |.j..........|...|
0x1060:     e9 f9 ff ff 5b 00 00 00  00 41 0e 10 86 02 43 0d   |....[....A....C.|
0x1070:     06 02 56 0c 07 08 00 00  1c 00 00 00 9c 00 00 00   |..V.............|
0x1080:     24 fa ff ff a9 00 00 00  00 41 0e 10 86 02 43 0d   |$........A....C.|
0x1090:     06 02 a4 0c 07 08 00 00  1c 00 00 00 bc 00 00 00   |................|
0x10a0:     ad fa ff ff ae 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x10b0:     06 02 a9 0c 07 08 00 00  1c 00 00 00 dc 00 00 00   |................|
0x10c0:     3b fb ff ff a8 00 00 00  00 41 0e 10 86 02 43 0d   |;........A....C.|
0x10d0:     06 02 a3 0c 07 08 00 00  1c 00 00 00 fc 00 00 00   |................|
0x10e0:     c3 fb ff ff b3 00 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0x10f0:     06 02 ae 0c 07 08 00 00  1c 00 00 00 1c 01 00 00   |................|
0x1100:     56 fc ff ff b1 00 00 00  00 41 0e 10 86 02 43 0d   |V........A....C.|
0x1110:     06 00 00 00 00 00 00 00  44 00 00 00 3c 01 00 00   |........D...<...|
0x1120:     f0 fc ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |....e....B....B.|
0x1130:     18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x1140:     86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x1150:     41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x1160:     10 00 00 00 84 01 00 00  18 fd ff ff 02 00 00 00   |................|
0x1170:     00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x201d60:   10 0a 00 00 00 00 00 00  d0                        |.........       |
; section: .fini_array
0x201d68:   d0 09 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x201d70:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x201d80:   0c 00 00 00 00 00 00 00  18 08 00 00 00 00 00 00   |................|
0x201d90:   0d 00 00 00 00 00 00 00  84 0e 00 00 00 00 00 00   |................|
0x201da0:   19 00 00 00 00 00 00 00  60 1d 20 00 00 00 00 00   |........`. .....|
0x201db0:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201dc0:   1a 00 00 00 00 00 00 00  68 1d 20 00 00 00 00 00   |........h. .....|
0x201dd0:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201de0:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x201df0:   05 00 00 00 00 00 00 00  a0 04 00 00 00 00 00 00   |................|
0x201e00:   06 00 00 00 00 00 00 00  c0 02 00 00 00 00 00 00   |................|
0x201e10:   0a 00 00 00 00 00 00 00  ff 00 00 00 00 00 00 00   |................|
0x201e20:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201e30:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201e40:   03 00 00 00 00 00 00 00  60 1f 20 00 00 00 00 00   |........`. .....|
0x201e50:   02 00 00 00 00 00 00 00  20 01 00 00 00 00 00 00   |........ .......|
0x201e60:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x201e70:   17 00 00 00 00 00 00 00  f8 06 00 00 00 00 00 00   |................|
0x201e80:   07 00 00 00 00 00 00 00  08 06 00 00 00 00 00 00   |................|
0x201e90:   08 00 00 00 00 00 00 00  f0 00 00 00 00 00 00 00   |................|
0x201ea0:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x201eb0:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x201ec0:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x201ed0:   fe ff ff 6f 00 00 00 00  c8 05 00 00 00 00 00 00   |...o............|
0x201ee0:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x201ef0:   f0 ff ff 6f 00 00 00 00  a0 05 00 00 00 00 00 00   |...o............|
0x201f00:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x201f10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201f60:   70                                                 |p               |
; section: .got
0x201f60:   70 1d 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |p. .............|
0x201f70:   00 00 00 00 00 00 00 00  46 08 00 00 00 00 00 00   |........F.......|
0x201f80:   56 08 00 00 00 00 00 00  66 08 00 00 00 00 00 00   |V.......f.......|
0x201f90:   76 08 00 00 00 00 00 00  86 08 00 00 00 00 00 00   |v...............|
0x201fa0:   96 08 00 00 00 00 00 00  a6 08 00 00 00 00 00 00   |................|
0x201fb0:   b6 08 00 00 00 00 00 00  c6 08 00 00 00 00 00 00   |................|
0x201fc0:   d6 08 00 00 00 00 00 00  e6 08 00 00 00 00 00 00   |................|
0x201fd0:   f6 08 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201fe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x201ff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x202000:   00                                                 |.               |
; section: .data
0x202000:   00 00 00 00 00 00 00 00  08 20 20 00 00 00 00 00   |.........  .....|
0x202010:   00                                                 |.               |
